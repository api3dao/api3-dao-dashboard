/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BytesLike, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type { KlerosLiquidProxy, KlerosLiquidProxyInterface } from '../../arbitrators/KlerosLiquidProxy';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_claimsManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_klerosArbitrator',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_klerosArbitratorExtraData',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: '_metaEvidence',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'AppealedKlerosArbitratorRuling',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'CreatedDispute',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_metaEvidenceID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_evidenceGroupID',
        type: 'uint256',
      },
    ],
    name: 'Dispute',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_evidenceGroupID',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_party',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: '_evidence',
        type: 'string',
      },
    ],
    name: 'Evidence',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: '_metaEvidenceID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'string',
        name: '_evidence',
        type: 'string',
      },
    ],
    name: 'MetaEvidence',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_ruling',
        type: 'uint256',
      },
    ],
    name: 'Ruling',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'SubmittedEvidenceToKlerosArbitrator',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
    ],
    name: 'appealCost',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'policyHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'claimAmountInUsd',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'appealKlerosArbitratorRuling',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
    ],
    name: 'appealPeriod',
    outputs: [
      {
        internalType: 'uint256',
        name: 'start',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'end',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'arbitrationCost',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
    ],
    name: 'claimHashToDispute',
    outputs: [
      {
        internalType: 'uint96',
        name: 'subCourtId',
        type: 'uint96',
      },
      {
        internalType: 'address',
        name: 'arbitrated',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'numberOfChoices',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'period',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'lastPeriodChange',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'drawsInRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'commitsInRound',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'ruled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'claimHashToDisputeId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimsManager',
    outputs: [
      {
        internalType: 'contract IClaimsManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'subCourtId',
        type: 'uint256',
      },
    ],
    name: 'courts',
    outputs: [
      {
        internalType: 'uint96',
        name: 'parent',
        type: 'uint96',
      },
      {
        internalType: 'bool',
        name: 'hiddenVotes',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'minStake',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'alpha',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'feeForJuror',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'jurorsForCourtJump',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'policyHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'claimAmountInUsd',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'createDispute',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
    ],
    name: 'currentRuling',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'disputeIdToClaimDetails',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'policyHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'amountInUsd',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
    ],
    name: 'disputeStatus',
    outputs: [
      {
        internalType: 'enum IArbitrator.DisputeStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
    ],
    name: 'executeRuling',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: 'subCourtId',
        type: 'uint96',
      },
    ],
    name: 'getSubCourt',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'children',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[4]',
        name: 'timesPerPeriod',
        type: 'uint256[4]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'klerosArbitrator',
    outputs: [
      {
        internalType: 'contract IArbitrator',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'klerosArbitratorExtraData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ruling',
        type: 'uint256',
      },
    ],
    name: 'rule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'submitEvidenceToKlerosArbitrator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60c06040523480156200001157600080fd5b50604051620028b2380380620028b283398101604081905262000034916200022a565b6001600160a01b03808516608052831660a05281516200005c906000906020850190620000a2565b5060007f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d82604051620000909190620002e7565b60405180910390a25050505062000359565b828054620000b0906200031c565b90600052602060002090601f016020900481019282620000d457600085556200011f565b82601f10620000ef57805160ff19168380011785556200011f565b828001600101855582156200011f579182015b828111156200011f57825182559160200191906001019062000102565b506200012d92915062000131565b5090565b5b808211156200012d576000815560010162000132565b80516001600160a01b03811681146200016057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620001985781810151838201526020016200017e565b83811115620001a8576000848401525b50505050565b60006001600160401b0380841115620001cb57620001cb62000165565b604051601f8501601f19908116603f01168101908282118183101715620001f657620001f662000165565b816040528093508581528686860111156200021057600080fd5b620002208660208301876200017b565b5050509392505050565b600080600080608085870312156200024157600080fd5b6200024c8562000148565b93506200025c6020860162000148565b60408601519093506001600160401b03808211156200027a57600080fd5b818701915087601f8301126200028f57600080fd5b620002a088835160208501620001ae565b93506060870151915080821115620002b757600080fd5b508501601f81018713620002ca57600080fd5b620002db87825160208401620001ae565b91505092959194509250565b6020815260008251806020840152620003088160408501602087016200017b565b601f01601f19169190910160400192915050565b600181811c908216806200033157607f821691505b602082108114156200035357634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a0516124a062000412600039600081816103c80152818161049f01528181610619015281816107f7015281816108530152818161099601528181610b9401528181610c3c01528181610caf01528181610df801528181610fc50152818161106b01528181611138015281816112d0015281816114cf0152818161165d015281816117b7015261186f015260008181610218015281816108cb01528181610a7701528181610ee701526115bd01526124a06000f3fe6080604052600436106101045760003560e01c80633c62c7b8116100a05780638c5aa9c1116100645780638c5aa9c1146103b6578063ac9650d8146103ea578063bae2ded414610417578063bdee52641461042a578063e70362791461044a57600080fd5b80633c62c7b8146102e0578063697b05a2146103155780637281d90b146103385780637d06356b146103585780638aa202f41461038957600080fd5b8063169478a414610109578063175a841c1461014057806317a57e0c1461015557806318f4ddff146101c657806319b12f73146101e65780631eb08ba9146102065780631f5a0dd2146102475780632438b26a1461029e578063311a6c56146102c0575b600080fd5b34801561011557600080fd5b50610129610124366004611aa2565b610477565b604051610137929190611abf565b60405180910390f35b61015361014e366004611b8a565b61052e565b005b34801561016157600080fd5b50610175610170366004611c05565b610946565b604080516001600160601b0390991689526001600160a01b0390971660208901529587019490945260ff9092166060860152608085015260a084015260c0830152151560e082015261010001610137565b3480156101d257600080fd5b506101536101e1366004611c1e565b610a35565b3480156101f257600080fd5b50610153610201366004611c05565b610bfa565b34801561021257600080fd5b5061023a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516101379190611c69565b34801561025357600080fd5b50610267610262366004611c05565b610ca4565b604080516001600160601b0390971687529415156020870152938501929092526060840152608083015260a082015260c001610137565b3480156102aa57600080fd5b506102b3610d5f565b6040516101379190611cd9565b3480156102cc57600080fd5b506101536102db366004611cec565b610ded565b3480156102ec57600080fd5b506103006102fb366004611c05565b610f81565b60408051928352602083019190915201610137565b34801561032157600080fd5b5061032a611051565b604051908152602001610137565b34801561034457600080fd5b5061032a610353366004611c05565b6110f5565b34801561036457600080fd5b50610378610373366004611c05565b6111c7565b604051610137959493929190611d0e565b34801561039557600080fd5b506103a96103a4366004611c05565b61128e565b6040516101379190611d86565b3480156103c257600080fd5b5061023a7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103f657600080fd5b5061040a610405366004611d99565b611352565b6040516101379190611e0d565b610153610425366004611b8a565b611446565b34801561043657600080fd5b5061032a610445366004611c05565b61182d565b34801561045657600080fd5b5061032a610465366004611c05565b60016020526000908152604090205481565b60606104816119d3565b6040516305a51e2960e21b81526001600160601b03841660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063169478a49060240160006040518083038186803b1580156104e957600080fd5b505afa1580156104fd573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105259190810190611f22565b91509150915091565b336001600160a01b038616146105815760405162461bcd60e51b815260206004820152601360248201527214d95b99195c881b9bdd0818db185a5b585b9d606a1b60448201526064015b60405180910390fd5b600086338686868660405160200161059e96959493929190611fda565b60408051601f198184030181529181528151602092830120600081815260019093529120549091501561060d5760405162461bcd60e51b8152602060048201526017602482015276111a5cdc1d5d1948185b1c9958591e4818dc99585d1959604a1b6044820152606401610578565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c13517e134600260006040518463ffffffff1660e01b81526004016106609291906120fc565b6020604051808303818588803b15801561067957600080fd5b505af115801561068d573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906106b2919061211d565b90506040518060a00160405280898152602001886001600160a01b03168152602001876001600160a01b0316815260200186815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508381526002602081815260409283902085518155858201516001820180546001600160a01b03199081166001600160a01b039384161790915594870151938201805490951693169290921790925560608401516003820155608084015180519193506107949260048501929101906119f1565b5050506000828152600160205260408082208390555182916001600160a01b038a169185917f354d8b46d7abb27d2630cd7901647e413693d7e23eeec191fbca89e09091b63791a460408051600081526020810184905282916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d910160405180910390a3866001600160a01b03168260001c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c87876040516108ac92919061215f565b60405180910390a46040516305d6a10760e21b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063175a841c9061090a908b908b908b908b908b908b90600401612173565b600060405180830381600087803b15801561092457600080fd5b505af1158015610938573d6000803e3d6000fd5b505050505050505050505050565b6000818152600160205260408120548190819081908190819081908190806109805760405162461bcd60e51b8152600401610578906121b9565b60405163564a565d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063564a565d906024016101006040518083038186803b1580156109e157600080fd5b505afa1580156109f5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1991906121f5565b9850985098509850985098509850985050919395975091939597565b600083815260016020526040902054610a605760405162461bcd60e51b8152600401610578906121b9565b604051631859dd7160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2ceeb8890610aac903390600401611c69565b60206040518083038186803b158015610ac457600080fd5b505afa158015610ad8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afc9190612280565b610b405760405162461bcd60e51b815260206004820152601560248201527453656e6465722063616e6e6f74206d65646961746560581b6044820152606401610578565b336001600160a01b0316837f3197380c8d07c821fb0cea4dcd579661a133ccc5a3d9dffdbc5e373575ecca4e8484604051610b7c92919061215f565b60405180910390a3336001600160a01b03168360001c7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c8585604051610bed92919061215f565b60405180910390a4505050565b60008181526001602052604090205480610c265760405162461bcd60e51b8152600401610578906121b9565b604051638bb0487560e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638bb0487590602401600060405180830381600087803b158015610c8857600080fd5b505af1158015610c9c573d6000803e3d6000fd5b505050505050565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631f5a0dd2886040518263ffffffff1660e01b8152600401610cfb91815260200190565b60c06040518083038186803b158015610d1357600080fd5b505afa158015610d27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4b919061229b565b949c939b5091995097509550909350915050565b60008054610d6c90612020565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9890612020565b8015610de55780601f10610dba57610100808354040283529160200191610de5565b820191906000526020600020905b815481529060010190602001808311610dc857829003601f168201915b505050505081565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e5f5760405162461bcd60e51b815260206004820152601760248201527614d95b99195c881b9bdd0812db195c9bdcd31a5c5d5a59604a1b6044820152606401610578565b604051818152829033907f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e756222769060200160405180910390a36000816002811115610eaa57610eaa611d52565b6000848152600260208190526040918290208054600182015492820154600383015494516315be9c0b60e21b815295965091946001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116956356fa702c95610f2895908316939216916004808a01918b91016122f5565b602060405180830381600087803b158015610f4257600080fd5b505af1158015610f56573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f7a919061211d565b5050505050565b600081815260016020526040812054819080610faf5760405162461bcd60e51b8152600401610578906121b9565b60405163afe15cfb60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063afe15cfb90602401604080518083038186803b15801561100e57600080fd5b505afa158015611022573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611046919061234a565b909590945092505050565b60405163f7434ea960e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f7434ea9906110a090849060040161236e565b60206040518083038186803b1580156110b857600080fd5b505afa1580156110cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f0919061211d565b905090565b600081815260016020526040812054806111215760405162461bcd60e51b8152600401610578906121b9565b60405163791f8b7360e11b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f23f16e6906111709084906000906004016120fc565b60206040518083038186803b15801561118857600080fd5b505afa15801561119c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c0919061211d565b9392505050565b60026020819052600091825260409091208054600182015492820154600383015460048401805493956001600160a01b039081169593169391929161120b90612020565b80601f016020809104026020016040519081016040528092919081815260200182805461123790612020565b80156112845780601f1061125957610100808354040283529160200191611284565b820191906000526020600020905b81548152906001019060200180831161126757829003601f168201915b5050505050905085565b600081815260016020526040812054806112ba5760405162461bcd60e51b8152600401610578906121b9565b60405163021e2d3d60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906310f169e89060240160206040518083038186803b15801561131a57600080fd5b505afa15801561132e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111c09190612381565b6060816001600160401b0381111561136c5761136c611e6f565b60405190808252806020026020018201604052801561139f57816020015b606081526020019060019003908161138a5790505b50905060005b8281101561143f5761140f308585848181106113c3576113c36123a2565b90506020028101906113d591906123b8565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118a692505050565b828281518110611421576114216123a2565b60200260200101819052508080611437906123fe565b9150506113a5565b5092915050565b600086338686868660405160200161146396959493929190611fda565b60408051601f19818403018152918152815160209283012060008181526001909352912054909150806114a85760405162461bcd60e51b8152600401610578906121b9565b336001600160a01b03881614156115a657604051631c3db16d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d9060240160206040518083038186803b15801561151957600080fd5b505afa15801561152d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611551919061211d565b600114156115a15760405162461bcd60e51b815260206004820152601b60248201527f52756c696e6720616772656573207769746820636c61696d616e7400000000006044820152606401610578565b611771565b604051631859dd7160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2ceeb88906115f2903390600401611c69565b60206040518083038186803b15801561160a57600080fd5b505afa15801561161e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116429190612280565b1561172f57604051631c3db16d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d9060240160206040518083038186803b1580156116a757600080fd5b505afa1580156116bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116df919061211d565b600214156115a15760405162461bcd60e51b815260206004820152601b60248201527f52756c696e67206167726565732077697468206d65646961746f7200000000006044820152606401610578565b60405162461bcd60e51b815260206004820152601760248201527613db9b1e481c185c9d1a595cc818d85b88185c1c19585b604a1b6044820152606401610578565b6040518190339084907fdde2be4f29beb5a4f968941dfc477fab45820b395c579e57c9e0252e9f1270e090600090a460405163093225f160e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906349912f889034906117f19085906000906004016120fc565b6000604051808303818588803b15801561180a57600080fd5b505af115801561181e573d6000803e3d6000fd5b50505050505050505050505050565b600081815260016020526040812054806118595760405162461bcd60e51b8152600401610578906121b9565b604051631c3db16d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d90602401611170565b60606111c08383604051806060016040528060278152602001612444602791396060833b6119255760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b6064820152608401610578565b600080856001600160a01b0316856040516119409190612427565b600060405180830381855af49150503d806000811461197b576040519150601f19603f3d011682016040523d82523d6000602084013e611980565b606091505b509150915061199082828661199a565b9695505050505050565b606083156119a95750816111c0565b8251156119b95782518084602001fd5b8160405162461bcd60e51b81526004016105789190611cd9565b60405180608001604052806004906020820280368337509192915050565b8280546119fd90612020565b90600052602060002090601f016020900481019282611a1f5760008555611a65565b82601f10611a3857805160ff1916838001178555611a65565b82800160010185558215611a65579182015b82811115611a65578251825591602001919060010190611a4a565b50611a71929150611a75565b5090565b5b80821115611a715760008155600101611a76565b6001600160601b0381168114611a9f57600080fd5b50565b600060208284031215611ab457600080fd5b81356111c081611a8a565b60a0808252835190820181905260009060209060c0840190828701845b82811015611af857815184529284019290840190600101611adc565b5091935050508281018460005b6004811015611b2257815183529183019190830190600101611b05565b505050509392505050565b6001600160a01b0381168114611a9f57600080fd5b60008083601f840112611b5457600080fd5b5081356001600160401b03811115611b6b57600080fd5b602083019150836020828501011115611b8357600080fd5b9250929050565b60008060008060008060a08789031215611ba357600080fd5b863595506020870135611bb581611b2d565b94506040870135611bc581611b2d565b93506060870135925060808701356001600160401b03811115611be757600080fd5b611bf389828a01611b42565b979a9699509497509295939492505050565b600060208284031215611c1757600080fd5b5035919050565b600080600060408486031215611c3357600080fd5b8335925060208401356001600160401b03811115611c5057600080fd5b611c5c86828701611b42565b9497909650939450505050565b6001600160a01b0391909116815260200190565b60005b83811015611c98578181015183820152602001611c80565b83811115611ca7576000848401525b50505050565b60008151808452611cc5816020860160208601611c7d565b601f01601f19169290920160200192915050565b6020815260006111c06020830184611cad565b60008060408385031215611cff57600080fd5b50508035926020909101359150565b8581526001600160a01b038581166020830152841660408201526060810183905260a060808201819052600090611d4790830184611cad565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b60038110611a9f57634e487b7160e01b600052602160045260246000fd5b60208101611d9383611d68565b91905290565b60008060208385031215611dac57600080fd5b82356001600160401b0380821115611dc357600080fd5b818501915085601f830112611dd757600080fd5b813581811115611de657600080fd5b8660208260051b8501011115611dfb57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611e6257603f19888603018452611e50858351611cad565b94509285019290850190600101611e34565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715611ead57611ead611e6f565b604052919050565b600082601f830112611ec657600080fd5b604051608081018181106001600160401b0382111715611ee857611ee8611e6f565b604052806080840185811115611efd57600080fd5b845b81811015611f17578051835260209283019201611eff565b509195945050505050565b60008060a08385031215611f3557600080fd5b82516001600160401b0380821115611f4c57600080fd5b818501915085601f830112611f6057600080fd5b8151602082821115611f7457611f74611e6f565b8160051b9250611f85818401611e85565b8281529284018101928181019089851115611f9f57600080fd5b948201945b84861015611fbd57855182529482019490820190611fa4565b9650611fcd905088888301611eb5565b9450505050509250929050565b86815260006001600160601b0319808860601b166020840152808760601b1660348401525084604883015282846068840137506000910160680190815295945050505050565b600181811c9082168061203457607f821691505b6020821081141561205557634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061207557607f831692505b602080841082141561209757634e487b7160e01b600052602260045260246000fd5b8388528180156120ae57600181146120c2576120f0565b60ff198616898301526040890196506120f0565b876000528160002060005b868110156120e85781548b82018501529085019083016120cd565b8a0183019750505b50505050505092915050565b828152604060208201526000612115604083018461205b565b949350505050565b60006020828403121561212f57600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000612115602083018486612136565b8681526001600160a01b038681166020830152851660408201526060810184905260a0608082018190526000906121ad9083018486612136565b98975050505050505050565b6020808252600d908201526c496e76616c696420636c61696d60981b604082015260600190565b805180151581146121f057600080fd5b919050565b600080600080600080600080610100898b03121561221257600080fd5b885161221d81611a8a565b60208a015190985061222e81611b2d565b60408a015160608b0151919850965060ff8116811461224c57600080fd5b809550506080890151935060a0890151925060c0890151915061227160e08a016121e0565b90509295985092959890939650565b60006020828403121561229257600080fd5b6111c0826121e0565b60008060008060008060c087890312156122b457600080fd5b86516122bf81611a8a565b95506122cd602088016121e0565b945060408701519350606087015192506080870151915060a087015190509295509295509295565b8681526001600160a01b038681166020830152851660408201526060810184905260c06080820181905260009061232e9083018561205b565b905061233983611d68565b8260a0830152979650505050505050565b6000806040838503121561235d57600080fd5b505080516020909101519092909150565b6020815260006111c0602083018461205b565b60006020828403121561239357600080fd5b8151600381106111c057600080fd5b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126123cf57600080fd5b8301803591506001600160401b038211156123e957600080fd5b602001915036819003821315611b8357600080fd5b600060001982141561242057634e487b7160e01b600052601160045260246000fd5b5060010190565b60008251612439818460208701611c7d565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220ae3ae9b686f084a9f9aca9169ae918b0a70f61e9e1df0d2032040115918140ef64736f6c63430008090033';

type KlerosLiquidProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: KlerosLiquidProxyConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class KlerosLiquidProxy__factory extends ContractFactory {
  constructor(...args: KlerosLiquidProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _claimsManager: PromiseOrValue<string>,
    _klerosArbitrator: PromiseOrValue<string>,
    _klerosArbitratorExtraData: PromiseOrValue<BytesLike>,
    _metaEvidence: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KlerosLiquidProxy> {
    return super.deploy(
      _claimsManager,
      _klerosArbitrator,
      _klerosArbitratorExtraData,
      _metaEvidence,
      overrides || {}
    ) as Promise<KlerosLiquidProxy>;
  }
  override getDeployTransaction(
    _claimsManager: PromiseOrValue<string>,
    _klerosArbitrator: PromiseOrValue<string>,
    _klerosArbitratorExtraData: PromiseOrValue<BytesLike>,
    _metaEvidence: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _claimsManager,
      _klerosArbitrator,
      _klerosArbitratorExtraData,
      _metaEvidence,
      overrides || {}
    );
  }
  override attach(address: string): KlerosLiquidProxy {
    return super.attach(address) as KlerosLiquidProxy;
  }
  override connect(signer: Signer): KlerosLiquidProxy__factory {
    return super.connect(signer) as KlerosLiquidProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KlerosLiquidProxyInterface {
    return new utils.Interface(_abi) as KlerosLiquidProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KlerosLiquidProxy {
    return new Contract(address, _abi, signerOrProvider) as KlerosLiquidProxy;
  }
}
