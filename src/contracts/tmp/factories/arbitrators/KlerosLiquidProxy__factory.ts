/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BytesLike, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type { KlerosLiquidProxy, KlerosLiquidProxyInterface } from '../../arbitrators/KlerosLiquidProxy';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_claimsManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_klerosArbitrator',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_klerosArbitratorExtraData',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: '_metaEvidence',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'AppealedKlerosArbitratorRuling',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'claimHash',
        type: 'bytes32',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'CreatedDispute',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_metaEvidenceID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_evidenceGroupID',
        type: 'uint256',
      },
    ],
    name: 'Dispute',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_evidenceGroupID',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_party',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: '_evidence',
        type: 'string',
      },
    ],
    name: 'Evidence',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: '_metaEvidenceID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'string',
        name: '_evidence',
        type: 'string',
      },
    ],
    name: 'MetaEvidence',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_ruling',
        type: 'uint256',
      },
    ],
    name: 'Ruling',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'SubmittedEvidenceToKlerosArbitrator',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'appealCost',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'policyHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'uint224',
        name: 'claimAmountInUsd',
        type: 'uint224',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'appealKlerosArbitratorRuling',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'appealPeriod',
    outputs: [
      {
        internalType: 'uint256',
        name: 'start',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'end',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'arbitrationCost',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32',
      },
    ],
    name: 'claimHashToDisputeIdPlusOne',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimsManager',
    outputs: [
      {
        internalType: 'contract IClaimsManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'subcourtId',
        type: 'uint256',
      },
    ],
    name: 'courts',
    outputs: [
      {
        internalType: 'uint96',
        name: 'parent',
        type: 'uint96',
      },
      {
        internalType: 'bool',
        name: 'hiddenVotes',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'minStake',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'alpha',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'feeForJuror',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'jurorsForCourtJump',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'policyHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'uint224',
        name: 'claimAmountInUsd',
        type: 'uint224',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'createDispute',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'currentRuling',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'disputeIdToClaimDetails',
    outputs: [
      {
        internalType: 'bytes32',
        name: 'policyHash',
        type: 'bytes32',
      },
      {
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        internalType: 'address',
        name: 'beneficiary',
        type: 'address',
      },
      {
        internalType: 'uint224',
        name: 'amountInUsd',
        type: 'uint224',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'disputeStatus',
    outputs: [
      {
        internalType: 'enum IArbitrator.DisputeStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'disputes',
    outputs: [
      {
        internalType: 'uint96',
        name: 'subcourtId',
        type: 'uint96',
      },
      {
        internalType: 'address',
        name: 'arbitrated',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'numberOfChoices',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'period',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'lastPeriodChange',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'drawsInRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'commitsInRound',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'ruled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'executeRuling',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: 'subcourtId',
        type: 'uint96',
      },
    ],
    name: 'getSubcourt',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'children',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[4]',
        name: 'timesPerPeriod',
        type: 'uint256[4]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'klerosArbitrator',
    outputs: [
      {
        internalType: 'contract IArbitrator',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'klerosArbitratorExtraData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ruling',
        type: 'uint256',
      },
    ],
    name: 'rule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'submitEvidenceToKlerosArbitrator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60c06040523480156200001157600080fd5b5060405162002b6638038062002b6683398101604081905262000034916200037e565b6001600160a01b038416620000905760405162461bcd60e51b815260206004820152601a60248201527f436c61696d734d616e616765722061646472657373207a65726f00000000000060448201526064015b60405180910390fd5b6001600160a01b038316620000e85760405162461bcd60e51b815260206004820152601d60248201527f4b6c65726f7341726269747261746f722061646472657373207a65726f000000604482015260640162000087565b8151620001385760405162461bcd60e51b815260206004820181905260248201527f4b6c65726f7341726269747261746f722065787472614461746120656d707479604482015260640162000087565b8051620001885760405162461bcd60e51b815260206004820152601360248201527f4d6574612065766964656e636520656d70747900000000000000000000000000604482015260640162000087565b6001600160a01b03808516608052831660a0528151620001b0906000906020850190620001f6565b5060007f61606860eb6c87306811e2695215385101daab53bd6ab4e9f9049aead9363c7d82604051620001e491906200043b565b60405180910390a250505050620004ad565b828054620002049062000470565b90600052602060002090601f01602090048101928262000228576000855562000273565b82601f106200024357805160ff191683800117855562000273565b8280016001018555821562000273579182015b828111156200027357825182559160200191906001019062000256565b506200028192915062000285565b5090565b5b8082111562000281576000815560010162000286565b80516001600160a01b0381168114620002b457600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620002ec578181015183820152602001620002d2565b83811115620002fc576000848401525b50505050565b60006001600160401b03808411156200031f576200031f620002b9565b604051601f8501601f19908116603f011681019082821181831017156200034a576200034a620002b9565b816040528093508581528686860111156200036457600080fd5b62000374866020830187620002cf565b5050509392505050565b600080600080608085870312156200039557600080fd5b620003a0856200029c565b9350620003b0602086016200029c565b60408601519093506001600160401b0380821115620003ce57600080fd5b818701915087601f830112620003e357600080fd5b620003f48883516020850162000302565b935060608701519150808211156200040b57600080fd5b508501601f810187136200041e57600080fd5b6200042f8782516020840162000302565b91505092959194509250565b60208152600082518060208401526200045c816040850160208701620002cf565b601f01601f19169190910160400192915050565b600181811c908216806200048557607f821691505b60208210811415620004a757634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a0516125f96200056d600039600081816103ad0152818161049001528181610531015281816105bf01528181610708015281816108ca0152818161096701528181610a3901528181610a8a01528181610bfb01528181610d4101528181610f5301528181610fac015281816111e00152818161135d015281816114dc01528181611627015281816117b5015261190f01526000818161017f015281816107fc01528181611024015281816110f4015261171501526125f96000f3fe6080604052600436106101045760003560e01c806359ec827e116100a05780638f3ee44d116100645780638f3ee44d146103cf578063a250bb28146103e2578063ac9650d814610402578063afe15cfb1461042f578063b1db1c631461046457600080fd5b806359ec827e14610315578063697b05a2146103355780637d06356b1461034a5780638bb048751461037b5780638c5aa9c11461039b57600080fd5b806310f169e8146101095780631c3db16d1461013f5780631eb08ba91461016d5780631f5a0dd2146101ae5780632438b26a146102055780633052e3c314610227578063311a6c561461025457806340026c8714610276578063564a565d146102a4575b600080fd5b34801561011557600080fd5b50610129610124366004611b76565b610477565b6040516101369190611bc6565b60405180910390f35b34801561014b57600080fd5b5061015f61015a366004611b76565b610518565b604051908152602001610136565b34801561017957600080fd5b506101a17f000000000000000000000000000000000000000000000000000000000000000081565b6040516101369190611bd9565b3480156101ba57600080fd5b506101ce6101c9366004611b76565b6105b4565b604080516001600160601b0390971687529415156020870152938501929092526060840152608083015260a082015260c001610136565b34801561021157600080fd5b5061021a61066f565b6040516101369190611c49565b34801561023357600080fd5b5061015f610242366004611b76565b60016020526000908152604090205481565b34801561026057600080fd5b5061027461026f366004611c5c565b6106fd565b005b34801561028257600080fd5b50610296610291366004611c93565b6108a2565b604051610136929190611cb0565b3480156102b057600080fd5b506102c46102bf366004611b76565b610959565b604080516001600160601b0390991689526001600160a01b0390971660208901529587019490945260ff9092166060860152608085015260a084015260c0830152151560e082015261010001610136565b34801561032157600080fd5b5061015f610330366004611b76565b610a1f565b34801561034157600080fd5b5061015f610a70565b34801561035657600080fd5b5061036a610365366004611b76565b610b14565b604051610136959493929190611d1e565b34801561038757600080fd5b50610274610396366004611b76565b610be5565b3480156103a757600080fd5b506101a17f000000000000000000000000000000000000000000000000000000000000000081565b6102746103dd366004611ddc565b610c5b565b3480156103ee57600080fd5b506102746103fd366004611e60565b61109f565b34801561040e57600080fd5b5061042261041d366004611eab565b6113c5565b6040516101369190611f1f565b34801561043b57600080fd5b5061044f61044a366004611b76565b6114b9565b60408051928352602083019190915201610136565b610274610472366004611ddc565b61155f565b60405163021e2d3d60e31b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906310f169e89060240160206040518083038186803b1580156104da57600080fd5b505afa1580156104ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190611f81565b92915050565b604051631c3db16d60e01b8152600481018290526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d906024015b60206040518083038186803b15801561057c57600080fd5b505afa158015610590573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105129190611fa2565b6000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631f5a0dd2886040518263ffffffff1660e01b815260040161060b91815260200190565b60c06040518083038186803b15801561062357600080fd5b505afa158015610637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065b9190611fd0565b949c939b5091995097509550909350915050565b6000805461067c9061202a565b80601f01602080910402602001604051908101604052809291908181526020018280546106a89061202a565b80156106f55780601f106106ca576101008083540402835291602001916106f5565b820191906000526020600020905b8154815290600101906020018083116106d857829003601f168201915b505050505081565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107745760405162461bcd60e51b815260206004820152601760248201527614d95b99195c881b9bdd0812db195c9bdcd31a5c5d5a59604a1b60448201526064015b60405180910390fd5b604051818152829033907f394027a5fa6e098a1191094d1719d6929b9abc535fcc0c8f448d6a4e756222769060200160405180910390a360008160028111156107bf576107bf611b8f565b6000848152600260208190526040918290208054600182015492820154600383015494516368d248cf60e11b815295965091946001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081169563d1a4919e9561084995908316939216916001600160e01b03909116906004808a01918b9101612106565b602060405180830381600087803b15801561086357600080fd5b505af1158015610877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089b9190612163565b5050505050565b60606108ac611abf565b6040516340026c8760e01b81526001600160601b03841660048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906340026c879060240160006040518083038186803b15801561091457600080fd5b505afa158015610928573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109509190810190612233565b91509150915091565b6000806000806000806000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663564a565d8a6040518263ffffffff1660e01b81526004016109b391815260200190565b6101006040518083038186803b1580156109cc57600080fd5b505afa1580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0491906122eb565b97509750975097509750975097509750919395975091939597565b60405163791f8b7360e11b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f23f16e6906105649085908590600401612376565b60405163f7434ea960e01b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063f7434ea990610abf908490600401612397565b60206040518083038186803b158015610ad757600080fd5b505afa158015610aeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0f9190611fa2565b905090565b60026020819052600091825260409091208054600182015492820154600383015460048401805493956001600160a01b03908116959316936001600160e01b039092169291610b629061202a565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8e9061202a565b8015610bdb5780601f10610bb057610100808354040283529160200191610bdb565b820191906000526020600020905b815481529060010190602001808311610bbe57829003601f168201915b5050505050905085565b604051638bb0487560e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690638bb0487590602401600060405180830381600087803b158015610c4757600080fd5b505af115801561089b573d6000803e3d6000fd5b336001600160a01b03861614610ca95760405162461bcd60e51b815260206004820152601360248201527214d95b99195c881b9bdd0818db185a5b585b9d606a1b604482015260640161076b565b6000863386868686604051602001610cc6969594939291906123aa565b60408051601f1981840301815291815281516020928301206000818152600190935291205490915015610d355760405162461bcd60e51b8152602060048201526017602482015276111a5cdc1d5d1948185b1c9958591e4818dc99585d1959604a1b604482015260640161076b565b60006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c13517e134600260006040518463ffffffff1660e01b8152600401610d88929190612376565b6020604051808303818588803b158015610da157600080fd5b505af1158015610db5573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190610dda9190611fa2565b90506040518060a00160405280898152602001886001600160a01b03168152602001876001600160a01b03168152602001866001600160e01b0316815260200185858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250508381526002602081815260409283902085518155858201516001820180546001600160a01b03199081166001600160a01b039384161790915594870151938201805490951693169290921790925560608401516003820180546001600160e01b0319166001600160e01b0390921691909117905560808401518051919350610ee1926004850192910190611add565b50610ef191508290506001612410565b60008381526001602052604080822092909255905182916001600160a01b038a169185917f354d8b46d7abb27d2630cd7901647e413693d7e23eeec191fbca89e09091b63791a460408051600081526020810183905282916001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016917f74baab670a4015ab2f1b467c5252a96141a2573f2908e58a92081e80d3cfde3d910160405180910390a3866001600160a01b0316817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c8787604051611005929190612451565b60405180910390a4604051638f3ee44d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690638f3ee44d90611063908b908b908b908b908b908b90600401612465565b600060405180830381600087803b15801561107d57600080fd5b505af1158015611091573d6000803e3d6000fd5b505050505050505050505050565b806110dd5760405162461bcd60e51b815260206004820152600e60248201526d45766964656e636520656d70747960901b604482015260640161076b565b604051631859dd7160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2ceeb8890611129903390600401611bd9565b60206040518083038186803b15801561114157600080fd5b505afa158015611155573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117991906124b3565b6111bd5760405162461bcd60e51b815260206004820152601560248201527453656e6465722063616e6e6f74206d65646961746560581b604482015260640161076b565b60405163564a565d60e01b81526004810184905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063564a565d906024016101006040518083038186803b15801561122357600080fd5b505afa158015611237573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125b91906122eb565b50505050935050925050306001600160a01b0316826001600160a01b0316146112bb5760405162461bcd60e51b8152602060048201526012602482015271125b9d985b1a5908191a5cdc1d5d1948125160721b604482015260640161076b565b60ff81161561130c5760405162461bcd60e51b815260206004820152601e60248201527f44697370757465206e6f7420696e2065766964656e636520706572696f640000604482015260640161076b565b84336001600160a01b03167f3a81627922fff157e53fd32502609965d6a56d105743a17e2ad9bb3e4e006d808686604051611348929190612451565b60405180910390a3336001600160a01b0316857f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167fdccf2f8b2cc26eafcd61905cba744cff4b81d14740725f6376390dc6298a6a3c87876040516113b6929190612451565b60405180910390a45050505050565b6060816001600160401b038111156113df576113df612180565b60405190808252806020026020018201604052801561141257816020015b60608152602001906001900390816113fd5790505b50905060005b828110156114b25761148230858584818110611436576114366124ce565b905060200281019061144891906124e4565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061198692505050565b828281518110611494576114946124ce565b602002602001018190525080806114aa9061252a565b915050611418565b5092915050565b60405163afe15cfb60e01b81526004810182905260009081906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063afe15cfb90602401604080518083038186803b15801561151d57600080fd5b505afa158015611531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115559190612545565b9094909350915050565b600086338686868660405160200161157c969594939291906123aa565b60408051601f19818403018152918152815160209283012060008181526001909352912054909150806115f15760405162461bcd60e51b815260206004820152601b60248201527f4e6f20646973707574652072656c6174656420746f20636c61696d0000000000604482015260640161076b565b60006115fe600183612569565b9050336001600160a01b03891614156116fe57604051631c3db16d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d9060240160206040518083038186803b15801561167157600080fd5b505afa158015611685573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a99190611fa2565b600114156116f95760405162461bcd60e51b815260206004820152601b60248201527f52756c696e6720616772656573207769746820636c61696d616e740000000000604482015260640161076b565b6118c9565b604051631859dd7160e31b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063c2ceeb889061174a903390600401611bd9565b60206040518083038186803b15801561176257600080fd5b505afa158015611776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061179a91906124b3565b1561188757604051631c3db16d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690631c3db16d9060240160206040518083038186803b1580156117ff57600080fd5b505afa158015611813573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118379190611fa2565b600214156116f95760405162461bcd60e51b815260206004820152601b60248201527f52756c696e67206167726565732077697468206d65646961746f720000000000604482015260640161076b565b60405162461bcd60e51b815260206004820152601760248201527613db9b1e481c185c9d1a595cc818d85b88185c1c19585b604a1b604482015260640161076b565b6040518190339085907fdde2be4f29beb5a4f968941dfc477fab45820b395c579e57c9e0252e9f1270e090600090a460405163093225f160e31b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906349912f88903490611949908590600090600401612376565b6000604051808303818588803b15801561196257600080fd5b505af1158015611976573d6000803e3d6000fd5b5050505050505050505050505050565b60606119ab838360405180606001604052806027815260200161259d602791396119b2565b9392505050565b6060833b611a115760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161076b565b600080856001600160a01b031685604051611a2c9190612580565b600060405180830381855af49150503d8060008114611a67576040519150601f19603f3d011682016040523d82523d6000602084013e611a6c565b606091505b5091509150611a7c828286611a86565b9695505050505050565b60608315611a955750816119ab565b825115611aa55782518084602001fd5b8160405162461bcd60e51b815260040161076b9190611c49565b60405180608001604052806004906020820280368337509192915050565b828054611ae99061202a565b90600052602060002090601f016020900481019282611b0b5760008555611b51565b82601f10611b2457805160ff1916838001178555611b51565b82800160010185558215611b51579182015b82811115611b51578251825591602001919060010190611b36565b50611b5d929150611b61565b5090565b5b80821115611b5d5760008155600101611b62565b600060208284031215611b8857600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60038110611bc357634e487b7160e01b600052602160045260246000fd5b50565b60208101611bd383611ba5565b91905290565b6001600160a01b0391909116815260200190565b60005b83811015611c08578181015183820152602001611bf0565b83811115611c17576000848401525b50505050565b60008151808452611c35816020860160208601611bed565b601f01601f19169290920160200192915050565b6020815260006119ab6020830184611c1d565b60008060408385031215611c6f57600080fd5b50508035926020909101359150565b6001600160601b0381168114611bc357600080fd5b600060208284031215611ca557600080fd5b81356119ab81611c7e565b60a0808252835190820181905260009060209060c0840190828701845b82811015611ce957815184529284019290840190600101611ccd565b5091935050508281018460005b6004811015611d1357815183529183019190830190600101611cf6565b505050509392505050565b8581526001600160a01b038581166020830152841660408201526001600160e01b038316606082015260a060808201819052600090611d5f90830184611c1d565b979650505050505050565b6001600160a01b0381168114611bc357600080fd5b6001600160e01b0381168114611bc357600080fd5b60008083601f840112611da657600080fd5b5081356001600160401b03811115611dbd57600080fd5b602083019150836020828501011115611dd557600080fd5b9250929050565b60008060008060008060a08789031215611df557600080fd5b863595506020870135611e0781611d6a565b94506040870135611e1781611d6a565b93506060870135611e2781611d7f565b925060808701356001600160401b03811115611e4257600080fd5b611e4e89828a01611d94565b979a9699509497509295939492505050565b600080600060408486031215611e7557600080fd5b8335925060208401356001600160401b03811115611e9257600080fd5b611e9e86828701611d94565b9497909650939450505050565b60008060208385031215611ebe57600080fd5b82356001600160401b0380821115611ed557600080fd5b818501915085601f830112611ee957600080fd5b813581811115611ef857600080fd5b8660208260051b8501011115611f0d57600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611f7457603f19888603018452611f62858351611c1d565b94509285019290850190600101611f46565b5092979650505050505050565b600060208284031215611f9357600080fd5b8151600381106119ab57600080fd5b600060208284031215611fb457600080fd5b5051919050565b80518015158114611fcb57600080fd5b919050565b60008060008060008060c08789031215611fe957600080fd5b8651611ff481611c7e565b955061200260208801611fbb565b945060408701519350606087015192506080870151915060a087015190509295509295509295565b600181811c9082168061203e57607f821691505b6020821081141561205f57634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061207f57607f831692505b60208084108214156120a157634e487b7160e01b600052602260045260246000fd5b8388528180156120b857600181146120cc576120fa565b60ff198616898301526040890196506120fa565b876000528160002060005b868110156120f25781548b82018501529085019083016120d7565b8a0183019750505b50505050505092915050565b8681526001600160a01b038681166020830152851660408201526001600160e01b038416606082015260c06080820181905260009061214790830185612065565b905061215283611ba5565b8260a0830152979650505050505050565b60006020828403121561217557600080fd5b81516119ab81611d7f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156121be576121be612180565b604052919050565b600082601f8301126121d757600080fd5b604051608081018181106001600160401b03821117156121f9576121f9612180565b60405280608084018581111561220e57600080fd5b845b81811015612228578051835260209283019201612210565b509195945050505050565b60008060a0838503121561224657600080fd5b82516001600160401b038082111561225d57600080fd5b818501915085601f83011261227157600080fd5b815160208282111561228557612285612180565b8160051b9250612296818401612196565b82815292840181019281810190898511156122b057600080fd5b948201945b848610156122ce578551825294820194908201906122b5565b96506122de9050888883016121c6565b9450505050509250929050565b600080600080600080600080610100898b03121561230857600080fd5b885161231381611c7e565b60208a015190985061232481611d6a565b60408a015160608b0151919850965060ff8116811461234257600080fd5b809550506080890151935060a0890151925060c0890151915061236760e08a01611fbb565b90509295985092959890939650565b82815260406020820152600061238f6040830184612065565b949350505050565b6020815260006119ab6020830184612065565b86815260006001600160601b0319808860601b166020840152808760601b1660348401525063ffffffff198560201b16604883015282846064840137506000910160640190815295945050505050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612423576124236123fa565b500190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60208152600061238f602083018486612428565b8681526001600160a01b038681166020830152851660408201526001600160e01b038416606082015260a0608082018190526000906124a79083018486612428565b98975050505050505050565b6000602082840312156124c557600080fd5b6119ab82611fbb565b634e487b7160e01b600052603260045260246000fd5b6000808335601e198436030181126124fb57600080fd5b8301803591506001600160401b0382111561251557600080fd5b602001915036819003821315611dd557600080fd5b600060001982141561253e5761253e6123fa565b5060010190565b6000806040838503121561255857600080fd5b505080516020909101519092909150565b60008282101561257b5761257b6123fa565b500390565b60008251612592818460208701611bed565b919091019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220709ed4d1af9e263f40d4ce6b6a41129f99404ae080682421a959b00671b5178864736f6c63430008090033';

type KlerosLiquidProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: KlerosLiquidProxyConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class KlerosLiquidProxy__factory extends ContractFactory {
  constructor(...args: KlerosLiquidProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _claimsManager: PromiseOrValue<string>,
    _klerosArbitrator: PromiseOrValue<string>,
    _klerosArbitratorExtraData: PromiseOrValue<BytesLike>,
    _metaEvidence: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KlerosLiquidProxy> {
    return super.deploy(
      _claimsManager,
      _klerosArbitrator,
      _klerosArbitratorExtraData,
      _metaEvidence,
      overrides || {}
    ) as Promise<KlerosLiquidProxy>;
  }
  override getDeployTransaction(
    _claimsManager: PromiseOrValue<string>,
    _klerosArbitrator: PromiseOrValue<string>,
    _klerosArbitratorExtraData: PromiseOrValue<BytesLike>,
    _metaEvidence: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _claimsManager,
      _klerosArbitrator,
      _klerosArbitratorExtraData,
      _metaEvidence,
      overrides || {}
    );
  }
  override attach(address: string): KlerosLiquidProxy {
    return super.attach(address) as KlerosLiquidProxy;
  }
  override connect(signer: Signer): KlerosLiquidProxy__factory {
    return super.connect(signer) as KlerosLiquidProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KlerosLiquidProxyInterface {
    return new utils.Interface(_abi) as KlerosLiquidProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KlerosLiquidProxy {
    return new Contract(address, _abi, signerOrProvider) as KlerosLiquidProxy;
  }
}
