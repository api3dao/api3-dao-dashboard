/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, BytesLike, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type { KlerosLiquidProxy, KlerosLiquidProxyInterface } from '../../arbitrators/KlerosLiquidProxy';

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_claimsManager',
        type: 'address',
      },
      {
        internalType: 'address',
        name: '_klerosArbitrator',
        type: 'address',
      },
      {
        internalType: 'bytes',
        name: '_klerosArbitratorExtraData',
        type: 'bytes',
      },
      {
        internalType: 'string',
        name: '_metaEvidence',
        type: 'string',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'AppealedKlerosArbitratorRuling',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'claimant',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'CreatedDispute',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_metaEvidenceID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_evidenceGroupID',
        type: 'uint256',
      },
    ],
    name: 'Dispute',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_evidenceGroupID',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: '_party',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: '_evidence',
        type: 'string',
      },
    ],
    name: 'Evidence',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: '_metaEvidenceID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'string',
        name: '_evidence',
        type: 'string',
      },
    ],
    name: 'MetaEvidence',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'contract IArbitrator',
        name: '_arbitrator',
        type: 'address',
      },
      {
        indexed: true,
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
      {
        indexed: false,
        internalType: 'uint256',
        name: '_ruling',
        type: 'uint256',
      },
    ],
    name: 'Ruling',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address',
      },
      {
        indexed: false,
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'SubmittedEvidenceToKlerosArbitrator',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
    ],
    name: 'appealCost',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
    ],
    name: 'appealKlerosArbitratorRuling',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
    ],
    name: 'appealPeriod',
    outputs: [
      {
        internalType: 'uint256',
        name: 'start',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'end',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'arbitrationCost',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
    ],
    name: 'claimIndexToDispute',
    outputs: [
      {
        internalType: 'uint96',
        name: 'subCourtId',
        type: 'uint96',
      },
      {
        internalType: 'address',
        name: 'arbitrated',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'numberOfChoices',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'period',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'lastPeriodChange',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'drawsInRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'commitsInRound',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'ruled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'claimIndexToDisputeId',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'claimsManager',
    outputs: [
      {
        internalType: 'contract IClaimsManager',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'subCourtId',
        type: 'uint256',
      },
    ],
    name: 'courts',
    outputs: [
      {
        internalType: 'uint96',
        name: 'parent',
        type: 'uint96',
      },
      {
        internalType: 'bool',
        name: 'hiddenVotes',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'minStake',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'alpha',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'feeForJuror',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'jurorsForCourtJump',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
    ],
    name: 'createDispute',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
    ],
    name: 'currentRuling',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'disputeIdToClaimIndex',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
    ],
    name: 'disputeStatus',
    outputs: [
      {
        internalType: 'enum IArbitrator.DisputeStatus',
        name: '',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
    ],
    name: 'executeRuling',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: 'subCourtId',
        type: 'uint96',
      },
    ],
    name: 'getSubCourt',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'children',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[4]',
        name: 'timesPerPeriod',
        type: 'uint256[4]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'klerosArbitrator',
    outputs: [
      {
        internalType: 'contract IArbitrator',
        name: '',
        type: 'address',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'klerosArbitratorExtraData',
    outputs: [
      {
        internalType: 'bytes',
        name: '',
        type: 'bytes',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes[]',
        name: 'data',
        type: 'bytes[]',
      },
    ],
    name: 'multicall',
    outputs: [
      {
        internalType: 'bytes[]',
        name: 'results',
        type: 'bytes[]',
      },
    ],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ruling',
        type: 'uint256',
      },
    ],
    name: 'rule',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'claimIndex',
        type: 'uint256',
      },
      {
        internalType: 'string',
        name: 'evidence',
        type: 'string',
      },
    ],
    name: 'submitEvidenceToKlerosArbitrator',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '';

type KlerosLiquidProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: KlerosLiquidProxyConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class KlerosLiquidProxy__factory extends ContractFactory {
  constructor(...args: KlerosLiquidProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _claimsManager: PromiseOrValue<string>,
    _klerosArbitrator: PromiseOrValue<string>,
    _klerosArbitratorExtraData: PromiseOrValue<BytesLike>,
    _metaEvidence: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KlerosLiquidProxy> {
    return super.deploy(
      _claimsManager,
      _klerosArbitrator,
      _klerosArbitratorExtraData,
      _metaEvidence,
      overrides || {}
    ) as Promise<KlerosLiquidProxy>;
  }
  override getDeployTransaction(
    _claimsManager: PromiseOrValue<string>,
    _klerosArbitrator: PromiseOrValue<string>,
    _klerosArbitratorExtraData: PromiseOrValue<BytesLike>,
    _metaEvidence: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _claimsManager,
      _klerosArbitrator,
      _klerosArbitratorExtraData,
      _metaEvidence,
      overrides || {}
    );
  }
  override attach(address: string): KlerosLiquidProxy {
    return super.attach(address) as KlerosLiquidProxy;
  }
  override connect(signer: Signer): KlerosLiquidProxy__factory {
    return super.connect(signer) as KlerosLiquidProxy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KlerosLiquidProxyInterface {
    return new utils.Interface(_abi) as KlerosLiquidProxyInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): KlerosLiquidProxy {
    return new Contract(address, _abi, signerOrProvider) as KlerosLiquidProxy;
  }
}
