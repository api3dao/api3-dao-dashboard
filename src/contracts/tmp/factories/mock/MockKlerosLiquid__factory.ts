/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from 'ethers';
import type { Provider, TransactionRequest } from '@ethersproject/providers';
import type { PromiseOrValue } from '../../common';
import type { MockKlerosLiquid, MockKlerosLiquidInterface } from '../../mock/MockKlerosLiquid';

const _abi = [
  {
    inputs: [],
    stateMutability: 'nonpayable',
    type: 'constructor',
  },
  {
    inputs: [],
    name: 'MIN_JURORS',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'NON_PAYABLE_AMOUNT',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'ruling',
        type: 'uint256',
      },
    ],
    name: '__setCurrentRulingAndPassPeriodFromVoteToAppeal',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_subcourtID',
        type: 'uint96',
      },
      {
        internalType: 'uint256[4]',
        name: '_timesPerPeriod',
        type: 'uint256[4]',
      },
    ],
    name: '__setSubcourtTimesPerPeriod',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'appeal',
    outputs: [],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'appealCost',
    outputs: [
      {
        internalType: 'uint256',
        name: 'cost',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
    ],
    name: 'appealPeriod',
    outputs: [
      {
        internalType: 'uint256',
        name: 'start',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'end',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'arbitrationCost',
    outputs: [
      {
        internalType: 'uint256',
        name: 'cost',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'subcourtId',
        type: 'uint256',
      },
    ],
    name: 'courts',
    outputs: [
      {
        internalType: 'uint96',
        name: 'parent',
        type: 'uint96',
      },
      {
        internalType: 'bool',
        name: 'hiddenVotes',
        type: 'bool',
      },
      {
        internalType: 'uint256',
        name: 'minStake',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'alpha',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'feeForJuror',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'jurorsForCourtJump',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_numberOfChoices',
        type: 'uint256',
      },
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'createDispute',
    outputs: [
      {
        internalType: 'uint256',
        name: 'disputeID',
        type: 'uint256',
      },
    ],
    stateMutability: 'payable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    name: 'currentRuling',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
    ],
    name: 'disputeStatus',
    outputs: [
      {
        internalType: 'enum MockKlerosLiquid.DisputeStatus',
        name: 'status',
        type: 'uint8',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: 'disputeId',
        type: 'uint256',
      },
    ],
    name: 'disputes',
    outputs: [
      {
        internalType: 'uint96',
        name: 'subcourtID',
        type: 'uint96',
      },
      {
        internalType: 'address',
        name: 'arbitrated',
        type: 'address',
      },
      {
        internalType: 'uint256',
        name: 'numberOfChoices',
        type: 'uint256',
      },
      {
        internalType: 'uint8',
        name: 'period',
        type: 'uint8',
      },
      {
        internalType: 'uint256',
        name: 'lastPeriodChange',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'drawsInRound',
        type: 'uint256',
      },
      {
        internalType: 'uint256',
        name: 'commitsInRound',
        type: 'uint256',
      },
      {
        internalType: 'bool',
        name: 'ruled',
        type: 'bool',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
    ],
    name: 'executeRuling',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'bytes',
        name: '_extraData',
        type: 'bytes',
      },
    ],
    name: 'extraDataToSubcourtIDAndMinJurors',
    outputs: [
      {
        internalType: 'uint96',
        name: 'subcourtID',
        type: 'uint96',
      },
      {
        internalType: 'uint256',
        name: 'minJurors',
        type: 'uint256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint96',
        name: '_subcourtID',
        type: 'uint96',
      },
    ],
    name: 'getSubcourt',
    outputs: [
      {
        internalType: 'uint256[]',
        name: 'children',
        type: 'uint256[]',
      },
      {
        internalType: 'uint256[4]',
        name: 'timesPerPeriod',
        type: 'uint256[4]',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_disputeID',
        type: 'uint256',
      },
    ],
    name: 'passPeriod',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

const _bytecode =
  '0x60806040523480156200001157600080fd5b506040805160a081018252600080825260208083018281526658d15e176280008486019081526101ff6060808701918252875160808181018a52620448e082526208e620968201879052988101959095526205eec09085015295850192835283546001810185559380528451600790940260008051602062001b3c83398151915281018054935115156c01000000000000000000000000026001600160681b03199094166001600160601b0396909616959095179290921784555160008051602062001b9c833981519152820155935160008051602062001b5c8339815191528501555191929091620001189160008051602062001b7c833981519152019060046200022a565b50506040805160a081018252600080825260208083018281526658d15e17628000848601908152603f6060808701918252875160808181018a52620448e082526208e620968201879052988101959095526205eec09085015295850192835283546001810185559380528451600790940260008051602062001b3c83398151915281018054935115156c01000000000000000000000000026001600160681b03199094166001600160601b0396909616959095179290921784555160008051602062001b9c833981519152820155935160008051602062001b5c8339815191528501555191935091620002219160008051602062001b7c8339815191529091019060046200022a565b50505062000284565b82600481019282156200025b579160200282015b828111156200025b5782518255916020019190600101906200023e565b50620002699291506200026d565b5090565b5b808211156200026957600081556001016200026e565b6118a880620002946000396000f3fe6080604052600436106100de5760003560e01c80638b80fd5a116100855780638b80fd5a1461029a5780638bb04875146102d95780639da40dd8146102f9578063a31507e314610319578063afe15cfb14610339578063c13517e11461036e578063eaff425a14610381578063f23f16e614610396578063f7434ea9146103b657600080fd5b806310f169e8146100e3578063115d5376146101195780631c3db16d1461013b5780631f5a0dd21461017657806340026c87146101cd57806349912f88146101fb578063564a565d1461020e578063840bc19c1461027f575b600080fd5b3480156100ef57600080fd5b506101036100fe366004611483565b6103d6565b60405161011091906114b2565b60405180910390f35b34801561012557600080fd5b50610139610134366004611483565b610443565b005b34801561014757600080fd5b50610168610156366004611483565b60036020526000908152604090205481565b604051908152602001610110565b34801561018257600080fd5b50610196610191366004611483565b6109d9565b604080516001600160601b0390971687529415156020870152938501929092526060840152608083015260a082015260c001610110565b3480156101d957600080fd5b506101ed6101e83660046114f6565b610a3d565b604051610110929190611518565b6101396102093660046115cf565b610ab9565b34801561021a57600080fd5b5061022e610229366004611483565b610d08565b604080516001600160601b0390991689526001600160a01b0390971660208901529587019490945260ff9092166060860152608085015260a084015260c0830152151560e082015261010001610110565b34801561028b57600080fd5b506101686001600160ff1b0381565b3480156102a657600080fd5b506102ba6102b5366004611631565b610d85565b604080516001600160601b039093168352602083019190915201610110565b3480156102e557600080fd5b506101396102f4366004611483565b610dce565b34801561030557600080fd5b506101396103143660046116e2565b610f7a565b34801561032557600080fd5b50610139610334366004611704565b610fcb565b34801561034557600080fd5b50610359610354366004611483565b61100c565b60408051928352602083019190915201610110565b61016861037c3660046115cf565b6110c1565b34801561038d57600080fd5b50610168600381565b3480156103a257600080fd5b506101686103b13660046115cf565b61122a565b3480156103c257600080fd5b506101686103d136600461173e565b611388565b60008181526002602052604081206003600282015460ff1660048111156103ff576103ff61149c565b101561040e576000915061043d565b6004600282015460ff1660048111156104295761042961149c565b1015610438576001915061043d565b600291505b50919050565b600081815260026020526040812090600282015460ff16600481111561046b5761046b61149c565b14156105de5780546000805490916001600160601b031690811061049157610491611780565b90600052602060002090600702016003018160020160009054906101000a900460ff1660048111156104c5576104c561149c565b600481106104d5576104d5611780565b015460038201546104e690426117ac565b101561056d5760405162461bcd60e51b8152602060048201526044602482018190527f5468652065766964656e636520706572696f642074696d6520686173206e6f74908201527f207061737365642079657420616e64206974206973206e6f7420616e2061707060648201526332b0b61760e11b608482015260a4015b60405180910390fd5b80546000805490916001600160601b031690811061058d5761058d611780565b6000918252602090912060079091020154600160601b900460ff166105b35760026105b6565b60015b60028201805460ff191660018360048111156105d4576105d461149c565b02179055506109cf565b6001600282015460ff1660048111156105f9576105f961149c565b14156107145780546000805490916001600160601b031690811061061f5761061f611780565b90600052602060002090600702016003018160020160009054906101000a900460ff1660048111156106535761065361149c565b6004811061066357610663611780565b0154600382015461067490426117ac565b10156107015760405162461bcd60e51b815260206004820152605060248201527f54686520636f6d6d697420706572696f642074696d6520686173206e6f74207060448201527f61737365642079657420616e64206e6f74206576657279206a75726f7220686160648201526f399031b7b6b6b4ba3a32b2103cb2ba1760811b608482015260a401610564565b6002818101805460ff19166001836105d4565b60028082015460ff16600481111561072e5761072e61149c565b14156108465780546000805490916001600160601b031690811061075457610754611780565b90600052602060002090600702016003018160020160009054906101000a900460ff1660048111156107885761078861149c565b6004811061079857610798611780565b015460038201546107a990426117ac565b10156108305760405162461bcd60e51b815260206004820152604a60248201527f54686520766f746520706572696f642074696d6520686173206e6f742070617360448201527f7365642079657420616e64206e6f74206576657279206a75726f7220686173206064820152693b37ba32b2103cb2ba1760b11b608482015260a401610564565b6002810180546003919060ff19166001836105d4565b6003600282015460ff1660048111156108615761086161149c565b14156109535780546000805490916001600160601b031690811061088757610887611780565b90600052602060002090600702016003018160020160009054906101000a900460ff1660048111156108bb576108bb61149c565b600481106108cb576108cb611780565b015460038201546108dc90426117ac565b101561093d5760405162461bcd60e51b815260206004820152602a60248201527f5468652061707065616c20706572696f642074696d6520686173206e6f74207060448201526930b9b9b2b2103cb2ba1760b11b6064820152608401610564565b6002810180546004919060ff19166001836105d4565b6004600282015460ff16600481111561096e5761096e61149c565b14156109cf5760405162461bcd60e51b815260206004820152602a60248201527f546865206469737075746520697320616c726561647920696e20746865206c6160448201526939ba103832b934b7b21760b11b6064820152608401610564565b4260039091015550565b60008060008060008060008088815481106109f6576109f6611780565b60009182526020822060079190910201805460018201546002909201546001600160601b0382169c600160601b90920460ff169b5092995089985090965090945092505050565b6060610a47611412565b600080846001600160601b031681548110610a6457610a64611780565b600091825260208083206040805194855260a08501908190529396506007929092029091019250840190600383019060049082845b815481526020019060010190808311610a99575050505050915050915091565b828282610ac783838361122a565b341015610b245760405162461bcd60e51b815260206004820152602560248201527f4e6f7420656e6f7567682045544820746f20636f7665722061707065616c206360448201526437b9ba399760d91b6064820152608401610564565b856003806000838152600260208190526040909120015460ff166004811115610b4f57610b4f61149c565b14610b5957600080fd5b60008881526002602052604090208054600160601b90046001600160a01b03163314610bde5760405162461bcd60e51b815260206004820152602e60248201527f43616e206f6e6c792062652063616c6c6564206279207468652061726269747260448201526d30b136329031b7b73a3930b1ba1760911b6064820152608401610564565b80546000805490916001600160601b0316908110610bfe57610bfe611780565b906000526020600020906007020160020154816006016000836005015481526020019081526020016000205410610c805780546000805490916001600160601b0316908110610c4f57610c4f611780565b600091825260209091206007909102015481546bffffffffffffffffffffffff19166001600160601b039091161781555b60028101805460ff19169055426003820155600581018054906000610ca4836117c3565b909155505080546000805490916001600160601b0316908110610cc957610cc9611780565b90600052602060002090600702016001015434610ce691906117de565b6005820154600090815260069092016020526040909120555050505050505050565b6000818152600260208190526040822080546001820154928201546001600160601b03821694600160601b9092046001600160a01b0316939282918291829182919060ff166004811115610d5e57610d5e61149c565b6003820154600490920154999b989a509698969790966000965086955060ff169350915050565b6000806040835110610dc2575050602081015160408201516000546001600160601b03831610610db457600091505b80610dbd575060035b915091565b50600090506003915091565b806004806000838152600260208190526040909120015460ff166004811115610df957610df961149c565b14610e0357600080fd5b6000838152600260205260409020600481015460ff1615610e615760405162461bcd60e51b8152602060048201526018602482015277293ab634b7339030b63932b0b23c9032bc32b1baba32b21760411b6044820152606401610564565b60048101805460ff19166001179055600084815260036020526040808220548354915160248101889052604481018290529092916001600160a01b03600160601b909104169060640160408051601f198184030181529181526020820180516001600160e01b031663188d362b60e11b17905251610edf9190611800565b6000604051808303816000865af19150503d8060008114610f1c576040519150601f19603f3d011682016040523d82523d6000602084013e610f21565b606091505b5050905080610f725760405162461bcd60e51b815260206004820152601b60248201527f5f5f52756c696e6720657865637574696f6e20726576657274656400000000006044820152606401610564565b505050505050565b60026000838152600260208190526040909120015460ff166004811115610fa357610fa361149c565b14610fad57600080fd5b6000828152600360205260409020819055610fc782610443565b5050565b806000836001600160601b031681548110610fe857610fe8611780565b9060005260206000209060070201600301906004611007929190611430565b505050565b600081815260026020526040812081906003600282015460ff1660048111156110375761103761149c565b14156110b2576003810154815460008054929550916001600160601b0390911690811061106657611066611780565b90600052602060002090600702016003016003600481111561108a5761108a61149c565b6004811061109a5761109a611780565b015481600301546110ab919061183b565b91506110bb565b60009250600091505b50915091565b600082826110cf8282611388565b3410156111315760405162461bcd60e51b815260206004820152602a60248201527f4e6f7420656e6f7567682045544820746f20636f76657220617262697472617460448201526934b7b71031b7b9ba399760b11b6064820152608401610564565b600061117286868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d8592505050565b50600180549192506000611185836117c3565b90915550600081815260026020819052604082206001600160601b03851633600160601b0281178255600182018c9055918101805460ff1990811690915542600383015560048201805490911690556005810183905582549397509281106111ef576111ef611780565b9060005260206000209060070201600101543461120c91906117de565b60008080526006909201602052604090912055509195945050505050565b600083815260026020908152604080832060058101548452600681019092528220548154835484916001600160601b031690811061126a5761126a611780565b906000526020600020906007020160020154811061132a5781546001600160601b03166112a0576001600160ff1b03925061137f565b6112ab816002611853565b6112b690600161183b565b825460008054909182916001600160601b039091169081106112da576112da611780565b600091825260209091206007909102015481546001600160601b0390911690811061130757611307611780565b9060005260206000209060070201600101546113239190611853565b925061137f565b611335816002611853565b61134090600161183b565b82546000805490916001600160601b031690811061136057611360611780565b90600052602060002090600702016001015461137c9190611853565b92505b50509392505050565b60008060006113cc85858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d8592505050565b91509150806000836001600160601b0316815481106113ed576113ed611780565b9060005260206000209060070201600101546114099190611853565b95945050505050565b60405180608001604052806004906020820280368337509192915050565b826004810192821561145e579160200282015b8281111561145e578235825591602001919060010190611443565b5061146a92915061146e565b5090565b5b8082111561146a576000815560010161146f565b60006020828403121561149557600080fd5b5035919050565b634e487b7160e01b600052602160045260246000fd5b60208101600383106114d457634e487b7160e01b600052602160045260246000fd5b91905290565b80356001600160601b03811681146114f157600080fd5b919050565b60006020828403121561150857600080fd5b611511826114da565b9392505050565b60a0808252835190820181905260009060209060c0840190828701845b8281101561155157815184529284019290840190600101611535565b5091935050508281018460005b600481101561157b5781518352918301919083019060010161155e565b505050509392505050565b60008083601f84011261159857600080fd5b50813567ffffffffffffffff8111156115b057600080fd5b6020830191508360208285010111156115c857600080fd5b9250929050565b6000806000604084860312156115e457600080fd5b83359250602084013567ffffffffffffffff81111561160257600080fd5b61160e86828701611586565b9497909650939450505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561164357600080fd5b813567ffffffffffffffff8082111561165b57600080fd5b818401915084601f83011261166f57600080fd5b8135818111156116815761168161161b565b604051601f8201601f19908116603f011681019083821181831017156116a9576116a961161b565b816040528281528760208487010111156116c257600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080604083850312156116f557600080fd5b50508035926020909101359150565b60008060a0838503121561171757600080fd5b611720836114da565b91508360a08401111561173257600080fd5b50926020919091019150565b6000806020838503121561175157600080fd5b823567ffffffffffffffff81111561176857600080fd5b61177485828601611586565b90969095509350505050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156117be576117be611796565b500390565b60006000198214156117d7576117d7611796565b5060010190565b6000826117fb57634e487b7160e01b600052601260045260246000fd5b500490565b6000825160005b818110156118215760208186018101518583015201611807565b81811115611830576000828501525b509190910192915050565b6000821982111561184e5761184e611796565b500190565b600081600019048311821515161561186d5761186d611796565b50029056fea26469706673582212200fcbdff34f15c583b963473656deec0c137184f37de4d696f79e8911974251a464736f6c63430008090033290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e565290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564';

type MockKlerosLiquidConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (xs: MockKlerosLiquidConstructorParams): xs is ConstructorParameters<typeof ContractFactory> =>
  xs.length > 1;

export class MockKlerosLiquid__factory extends ContractFactory {
  constructor(...args: MockKlerosLiquidConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(overrides?: Overrides & { from?: PromiseOrValue<string> }): Promise<MockKlerosLiquid> {
    return super.deploy(overrides || {}) as Promise<MockKlerosLiquid>;
  }
  override getDeployTransaction(overrides?: Overrides & { from?: PromiseOrValue<string> }): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockKlerosLiquid {
    return super.attach(address) as MockKlerosLiquid;
  }
  override connect(signer: Signer): MockKlerosLiquid__factory {
    return super.connect(signer) as MockKlerosLiquid__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockKlerosLiquidInterface {
    return new utils.Interface(_abi) as MockKlerosLiquidInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MockKlerosLiquid {
    return new Contract(address, _abi, signerOrProvider) as MockKlerosLiquid;
  }
}
